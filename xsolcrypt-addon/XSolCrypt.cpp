#include "XSolCrypt.h"
#include "crc32o.h"


const unsigned char XSolCrypt::DEF_KEY[] = {
  0xd5, 0xa8, 0x74, 0xcf, 0x88, 0xea, 0x9b, 0xb9, 0x49, 0x0b, 0xb3, 0xc0,
  0x78, 0xd4, 0x15, 0x6b, 0x24, 0xe8, 0x3f, 0x03, 0x63, 0x9f, 0x3b, 0xab,
  0x95, 0xa9, 0x9a, 0x79, 0x8f, 0x3b, 0xd6, 0xa1, 0xe0, 0x71, 0x63, 0xa9,
  0xb2, 0xef, 0x63, 0xe8, 0xb4, 0xaf, 0x7e, 0x41, 0x93, 0x1e, 0xc7, 0x6c,
  0x7f, 0x75, 0x69, 0xe8, 0xa7, 0x07, 0x26, 0x0a, 0x40, 0x30, 0xb1, 0x23,
  0xc8, 0x99, 0xb8, 0x99, 0xe9, 0x75, 0xc8, 0x02, 0xa4, 0xa7, 0xf0, 0xbd,
  0xa5, 0x8c, 0x74, 0xc6, 0x51, 0x0b, 0x0a, 0x15, 0x7f, 0xb1, 0xa8, 0xe7,
  0x03, 0x6d, 0x38, 0xb0, 0x97, 0x46, 0x51, 0x96, 0xb1, 0xaf, 0x5c, 0x4d,
  0x94, 0x76, 0x75, 0xd1, 0x20, 0x85, 0x8c, 0xe7, 0x0e, 0x68, 0x24, 0xc0,
  0x1e, 0x44, 0x50, 0xc1, 0x24, 0xae, 0x60, 0xae, 0x21, 0x40, 0xdb, 0x92,
  0x8c, 0x3d, 0x38, 0x79, 0x22, 0xf4, 0x76, 0xd2, 0x6a, 0x1e, 0xb3, 0x01,
  0x55, 0xcd, 0x76, 0x2e, 0x44, 0xb3, 0xeb, 0x64, 0x35, 0xaf, 0x0d, 0x9c,
  0xc5, 0x80, 0x49, 0xe9, 0xd2, 0x87, 0x72, 0x7f, 0xa2, 0x0b, 0x88, 0xc0,
  0xa4, 0x96, 0x66, 0x61, 0x29, 0x0e, 0x05, 0x2e, 0x29, 0x98, 0xb7, 0x02,
  0xff, 0xae, 0xe0, 0x2c, 0x30, 0x77, 0x3a, 0x17, 0x2a, 0xf7, 0x9c, 0xe1,
  0xbe, 0x3c, 0x43, 0x94, 0x78, 0x21, 0x51, 0x94, 0xd2, 0x36, 0x54, 0x85,
  0x8e, 0x49, 0xe3, 0x44, 0xba, 0x00, 0xbf, 0xa4, 0x3d, 0xed, 0x4f, 0x38,
  0xc4, 0x7d, 0x90, 0xc3, 0x0b, 0x1b, 0xfb, 0xe0, 0x25, 0x78, 0xfe, 0x30,
  0xd8, 0xeb, 0x5a, 0x55, 0xb5, 0xbc, 0xe8, 0x19, 0xf7, 0xd7, 0x63, 0x3d,
  0xb5, 0x9f, 0x59, 0x85, 0x89, 0x7b, 0x6e, 0x84, 0xa0, 0x61, 0x57, 0xc1,
  0x47, 0x88, 0x27, 0x2f, 0x9b, 0xed, 0x71, 0x35, 0xf2, 0xf7, 0x32, 0x61,
  0x78, 0x93, 0xd2, 0xa4, 0x39, 0xe3, 0xe7, 0xab, 0x83, 0xf4, 0xa4, 0x0d,
  0xba, 0x63, 0xfd, 0xe9, 0x83, 0x63, 0xd9, 0xff, 0x16, 0x36, 0xae, 0x16,
  0xe8, 0x09, 0x3f, 0x7f, 0x84, 0xdf, 0x4b, 0x8d, 0xd0, 0xae, 0x59, 0x72,
  0x0b, 0x12, 0x08, 0x61, 0x70, 0xf4, 0xdd, 0x8f, 0x14, 0x1c, 0x2a, 0xa1,
  0xe5, 0x49, 0xbe, 0xc8, 0xcf, 0xcf, 0xa0, 0x6a, 0xf6, 0x43, 0xd9, 0xc7,
  0xc2, 0xe0, 0x50, 0x78, 0xfc, 0x46, 0xc7, 0x1c, 0x3d, 0x58, 0xf7, 0x16,
  0x19, 0xc1, 0x4c, 0xfd, 0x08, 0xc6, 0xfe, 0x61, 0x2f, 0x41, 0xd2, 0x0e,
  0x9f, 0x0f, 0xa6, 0x65, 0x4b, 0xee, 0x80, 0xdd, 0x43, 0x08, 0x80, 0x86,
  0xb2, 0xa8, 0xbc, 0x78, 0xd3, 0x28, 0x07, 0x21, 0x05, 0xee, 0x4e, 0xdd,
  0x45, 0x7f, 0x7f, 0x96, 0x31, 0xda, 0x22, 0xb6, 0x73, 0x92, 0xfb, 0x4b,
  0xb6, 0xe8, 0x8b, 0xae, 0x7d, 0x67, 0xd8, 0x86, 0x14, 0x3d, 0x09, 0x9a,
  0x58, 0x25, 0x87, 0x6d, 0xef, 0xf4, 0xe7, 0xaf, 0x26, 0x50, 0xdb, 0x5f,
  0x53, 0xac, 0xa1, 0xc0, 0x00, 0x7e, 0x47, 0x71, 0x65, 0xf6, 0x7b, 0x20,
  0x0a, 0x60, 0x38, 0xe7, 0x73, 0xb2, 0x1e, 0x35, 0x98, 0x7c, 0x8a, 0xd9,
  0xbe, 0x0d, 0xa7, 0x6c, 0x77, 0xcf, 0xe2, 0xff, 0x53, 0x2b, 0xf0, 0x0b,
  0x8e, 0x4e, 0xeb, 0x6a, 0xaa, 0x22, 0x07, 0xec, 0x41, 0x4d, 0x33, 0x23,
  0x74, 0xcc, 0x96, 0x9c, 0x4f, 0x9a, 0x31, 0x1d, 0xc5, 0xe8, 0x2b, 0x17,
  0x92, 0xb5, 0xa9, 0xea, 0xcb, 0xdb, 0x38, 0xd3, 0xb7, 0xd7, 0x7e, 0x24,
  0x51, 0xd6, 0x40, 0x46, 0xbf, 0xac, 0x68, 0xd4, 0x17, 0xf2, 0x0f, 0xee,
  0xc7, 0x8f, 0x20, 0x51, 0x82, 0xf9, 0x5c, 0x82, 0xf2, 0x2b, 0xa3, 0x97,
  0xc9, 0x30, 0x26, 0xc1, 0x3d, 0xd7, 0xcc, 0x51, 0x81, 0xc7, 0x99, 0x18,
  0x0f, 0x56, 0x8c, 0x3c, 0xed, 0x00, 0x5f, 0x8c, 0x3d, 0x2f, 0x0d, 0xe8,
  0x8c, 0xb8, 0x5e, 0x42, 0x0d, 0xa0, 0xb6, 0x9f, 0x4b, 0x7c, 0x37, 0x12,
  0x20, 0x96, 0x16, 0x42, 0x96, 0x5a, 0xa5, 0x29, 0x53, 0xeb, 0xe2, 0xa5,
  0xf0, 0x68, 0x57, 0x82, 0xd9, 0x27, 0x06, 0xd2, 0x69, 0x9e, 0x3f, 0x53,
  0xe0, 0x1c, 0x16, 0xea, 0x03, 0xbb, 0xe6, 0x70, 0xde, 0xff, 0xf3, 0xb7,
  0xef, 0x69, 0x23, 0x9d, 0x0a, 0xd9, 0xd8, 0xe5, 0x79, 0x4b, 0xa5, 0x00,
  0x4b, 0x82, 0xdd, 0xe8, 0x09, 0x39, 0x75, 0x51, 0x47, 0xfb, 0x69, 0xac,
  0x8b, 0x09, 0xb5, 0x68, 0x3d, 0xea, 0xc9, 0x3d, 0x93, 0x14, 0x03, 0xc4,
  0x64, 0xbd, 0x55, 0x04, 0x0f, 0x0f, 0x86, 0x75, 0x12, 0x56, 0x64, 0xc0,
  0x9f, 0x8e, 0xb1, 0x2e, 0xe0, 0x68, 0x2a, 0x55, 0x3e, 0x3a, 0xa3, 0x95,
  0xd9, 0x46, 0xe5, 0x68, 0x88, 0x95, 0x5a, 0xea, 0x8c, 0x87, 0xc4, 0xeb,
  0xe0, 0x71, 0x2d, 0x75, 0xa6, 0xd3, 0x7a, 0x98, 0xe6, 0xff, 0x6a, 0x1c,
  0x80, 0x6b, 0xb1, 0x7c, 0xb0, 0x04, 0x0c, 0xdc, 0x43, 0x47, 0xf9, 0x28,
  0x50, 0x45, 0x75, 0x99, 0x60, 0x13, 0xfc, 0xf8, 0x08, 0xc1, 0xf4, 0xfb,
  0x12, 0xcc, 0x54, 0x2d, 0xa2, 0x8f, 0x0d, 0x8f, 0x39, 0xa0, 0x38, 0x9a,
  0x30, 0xb9, 0x59, 0x85, 0x04, 0xa2, 0x8b, 0x60, 0xfa, 0xf7, 0x28, 0xa0,
  0xf8, 0xb0, 0xb0, 0xa1, 0xef, 0x41, 0xcb, 0xf8, 0xf5, 0xcc, 0x25, 0x33,
  0x7b, 0x82, 0x2f, 0x3b, 0x64, 0xac, 0x8f, 0xc7, 0xe5, 0xa3, 0x90, 0x00,
  0xaf, 0x9b, 0x97, 0xc1, 0x84, 0xc1, 0x18, 0x98, 0xe5, 0x4d, 0x40, 0x69,
  0x81, 0x1a, 0x47, 0x8a, 0xd8, 0x49, 0x47, 0x73, 0x41, 0x16, 0xe9, 0x64,
  0x70, 0xbb, 0x3a, 0xb2, 0x06, 0xe8, 0x78, 0x06, 0x9c, 0x25, 0x56, 0x6b,
  0x2c, 0x38, 0x0d, 0xc9, 0x95, 0x86, 0x5d, 0x52, 0xdf, 0x14, 0x56, 0x52,
  0x2e, 0x26, 0x30, 0xca, 0xe1, 0x08, 0x41, 0x30, 0x39, 0xf0, 0x5b, 0xd6,
  0xec, 0x8d, 0xc7, 0xb0, 0xb0, 0x63, 0x59, 0xf0, 0x8f, 0x25, 0x3f, 0x1b,
  0xb2, 0xde, 0x30, 0xce, 0x5d, 0x17, 0x59, 0xcb, 0x79, 0x69, 0x9b, 0xaf,
  0xef, 0x47, 0x4e, 0xa1, 0x78, 0x66, 0x80, 0x53, 0x41, 0x51, 0x2f, 0xca,
  0x0b, 0x44, 0xa6, 0x1d, 0x66, 0xa4, 0x46, 0x09, 0x8a, 0x82, 0xd0, 0x35,
  0x34, 0x37, 0x1d, 0x6d, 0x4c, 0x3a, 0xe3, 0x54, 0x7d, 0x58, 0x8a, 0x1e,
  0x89, 0xed, 0x3c, 0x95, 0x06, 0x9c, 0x46, 0x4b, 0x3b, 0x04, 0x0b, 0x98,
  0x75, 0x01, 0x0c, 0x9c, 0x21, 0xc8, 0x95, 0x9e, 0x3b, 0x40, 0x43, 0x8a,
  0xa3, 0x8c, 0xa0, 0x3b, 0x5a, 0x5f, 0xff, 0x36, 0x76, 0x05, 0x84, 0x1f,
  0x52, 0x43, 0x7e, 0x6c, 0xcf, 0x8b, 0xcd, 0xb8, 0xc6, 0x9a, 0x01, 0x09,
  0xfd, 0xae, 0xd7, 0x16, 0x7a, 0xab, 0x03, 0xba, 0x90, 0x83, 0x97, 0xd7,
  0xe2, 0x5a, 0x71, 0xfc, 0x4f, 0xcf, 0xb4, 0x8d, 0x57, 0x38, 0x2f, 0x3e,
  0x23, 0xa5, 0xf1, 0xec, 0x70, 0xbb, 0xda, 0x22, 0xd2, 0x9c, 0xdc, 0x01,
  0x6a, 0x48, 0xee, 0xc6, 0xf2, 0x57, 0xb0, 0x72, 0x36, 0x40, 0xbe, 0x0e,
  0x00, 0x59, 0x5f, 0xbb, 0x25, 0xc4, 0x58, 0x3a, 0x54, 0xab, 0xa9, 0x97,
  0x8e, 0x77, 0xe7, 0x30, 0x44, 0x39, 0x81, 0x77, 0x08, 0x90, 0xa7, 0x09,
  0x52, 0x64, 0x8c, 0x78, 0xee, 0x95, 0x96, 0x59, 0xde, 0xba, 0x1c, 0xa0,
  0xb9, 0x0a, 0x93, 0x3c, 0x00, 0xb0, 0x87, 0x2b, 0xcb, 0x9a, 0x29, 0xf0,
  0xc3, 0x6f, 0x02, 0xaf, 0xa3, 0xe5, 0x69, 0x4f, 0x0b, 0x88, 0xdc, 0x4e,
  0x17, 0x17, 0x47, 0x2f, 0xf7, 0x93, 0x57, 0x55, 0x84, 0x74, 0x4e, 0x83,
  0x71, 0xf8, 0xa7, 0x42, 0xbf, 0xb9, 0x88, 0x4a, 0xd4, 0x7d, 0x5e, 0xb7,
  0xe5, 0xb2, 0xd8, 0x10, 0xd1, 0x6d, 0xcc, 0xbd, 0x38, 0xc2, 0x36, 0xba,
  0xb2, 0x2f, 0x3b, 0xf7, 0xd2, 0x6b, 0xe2, 0x80, 0x1d, 0x0a, 0xfb, 0xa9,
  0x5f, 0x44, 0x4d, 0x97, 0x18, 0x61, 0xb2, 0xff, 0xda, 0xea, 0x0b, 0x3e,
  0xa9, 0xf2, 0x12, 0x15, 0x28, 0xf3, 0x2c, 0x7d, 0x6d, 0x3b, 0x6d, 0xce,
  0xd7, 0x1d, 0xbd, 0x39, 0x75, 0xab, 0xfd, 0x1d, 0xc2, 0x2a, 0x6b, 0x55,
  0xeb, 0x67, 0x6e, 0x50, 0x7c, 0xff, 0x1a, 0x7d, 0x9b, 0x4b, 0x1b, 0x12,
  0x73, 0x25, 0x8b, 0x3b, 0x85, 0xec, 0x6b, 0x08, 0xa7, 0x92, 0x10, 0xce,
  0x3b, 0x50, 0xd0, 0x69, 0xf4, 0x94, 0xa9, 0xfb, 0xae, 0x80, 0x84, 0xa7,
  0x70, 0x05, 0x4a, 0x8a, 0x29, 0x7a, 0x90, 0xe6, 0xbc, 0xf0, 0x7a, 0x2a,
  0x86, 0x7e, 0x71, 0xb0, 0xb9, 0xcb, 0x5f, 0xde, 0x4e, 0x64, 0xcf, 0x4a,
  0x35, 0xc1, 0x0b, 0x1e, 0xaf, 0x09, 0x3b, 0xfd, 0x0d, 0x30, 0xc8, 0x54,
  0xc8, 0x3a, 0xbf, 0x46, 0x29, 0x88, 0xa4, 0x6c, 0x3e, 0xee, 0xbb, 0x36,
  0x58, 0x07, 0x85, 0xb8, 0xdb, 0x95, 0xfb, 0xf1, 0x72, 0xaf, 0x78, 0x33,
  0xdd, 0x4b, 0x01, 0x60, 0x99, 0x42, 0x32, 0x0b, 0x54, 0x08, 0x05, 0xd6,
  0xdf, 0xf4, 0xf3, 0xb3, 0xf5, 0x0f, 0x70, 0x8b, 0xae, 0xfc, 0xb6, 0xfe,
  0xa3, 0xdf, 0x6b, 0xb2, 0x93, 0x1d, 0xb6, 0xef, 0x10, 0xf1, 0xae, 0xaa,
  0xd5, 0xb0, 0x79, 0x2c, 0x2f, 0x97, 0x2e, 0xe8, 0x30, 0x6c, 0xaf, 0xa4,
  0x53, 0xd4, 0x2d, 0x8c, 0x1f, 0xd5, 0x4f, 0x55, 0x4c, 0xe4, 0x45, 0x8d,
  0x0e, 0x2e, 0x69, 0xe3, 0x1a, 0xaf, 0x77, 0x43, 0x0a, 0x8d, 0x5e, 0x1e,
  0xac, 0x72, 0x22, 0xae, 0x9f, 0x54, 0xdd, 0x32, 0xa4, 0x60, 0x08, 0xce,
  0xf2, 0xc5, 0xe0, 0x34, 0xe3, 0x97, 0xf8, 0xe6, 0x19, 0x9b, 0xcc, 0x2f,
  0x5d, 0xec, 0x5c, 0x68, 0x99, 0x5b, 0x34, 0x30, 0x1f, 0x85, 0x13, 0xc1,
  0xa6, 0xba, 0xc4, 0x64, 0x82, 0xbf, 0x5c, 0xd4, 0xa7, 0x24, 0x9b, 0x22,
  0x64, 0x32, 0xac, 0xb0, 0xc6, 0xdd, 0x8e, 0xf3, 0xad, 0xb5, 0x46, 0xb7,
  0xa7, 0x92, 0x35, 0x35, 0x3b, 0x76, 0xe8, 0xdf, 0x08, 0xda, 0x1e, 0xcd,
  0x1c, 0x14, 0x3c, 0xf9, 0xe0, 0x11, 0x53, 0xc6, 0xe5, 0xe0, 0xcb, 0x42,
  0x4c, 0x29, 0xe7, 0x64, 0xa7, 0x2e, 0x82, 0x6d, 0xf8, 0x03, 0x15, 0xd8,
  0xb4, 0x4c, 0x22, 0xe5, 0xde, 0xe5, 0xe6, 0x7d, 0x81, 0xdc, 0x14, 0xf8,
  0xfc, 0x43, 0xe9, 0x41, 0x56, 0xbe, 0x6c, 0x59, 0x71, 0x97, 0xe4, 0xde,
  0xe3, 0x14, 0xe5, 0x58, 0x08, 0xf6, 0x0e, 0x0b, 0xce, 0xc0, 0x31, 0x16,
  0xab, 0x12, 0x85, 0xe9, 0x32, 0x16, 0xc3, 0x48, 0xc6, 0x19, 0x94, 0x18,
  0x00, 0x94, 0x2e, 0x64, 0x7d, 0xac, 0x50, 0xdf, 0x1b, 0x09, 0xa1, 0x6e,
  0x8f, 0x05, 0x07, 0x8f, 0xdb, 0x70, 0xb0, 0x8d, 0x88, 0xf5, 0x65, 0x0e,
  0x30, 0xe1, 0xdc, 0x23, 0xdd, 0x4e, 0x6a, 0xc7, 0x80, 0xb4, 0x21, 0x35,
  0x49, 0x12, 0x62, 0xfc, 0xa1, 0x7b, 0xd3, 0xc6, 0x09, 0x95, 0xd9, 0x6a,
  0x01, 0x6c, 0x08, 0x3a, 0x1f, 0x17, 0xb5, 0x71, 0x21, 0xd5, 0x93, 0x3f,
  0x84
};
const unsigned int DEF_KEY_LEN = 1453;	// liczba pierwsza

const unsigned char XSolCrypt::CONST_KEY[] = {
  0xc5, 0xf3, 0xa8, 0x0e, 0xa8, 0x1f, 0xea, 0x91, 0xa4, 0x73, 0x8b, 0xcb,
  0x7d, 0x8a, 0xd6, 0x35, 0x97, 0x9a, 0xe8, 0x95, 0x2f, 0x64, 0x47, 0xeb,
  0x34, 0x66, 0x83, 0xe4, 0x0a, 0x36, 0xb9, 0xe7, 0x57, 0x22, 0x29, 0xe9,
  0x79, 0x05, 0xa2, 0x9c, 0x68, 0x52, 0x2c, 0x3e, 0x7c, 0x14, 0x20, 0x28,
  0xf0, 0xb7, 0xbd, 0x93, 0x84, 0x36, 0x3c, 0x52, 0xce, 0x36, 0xbb, 0xf3,
  0xd1, 0x91, 0x77, 0xa7, 0x84, 0x19, 0xff, 0x73, 0x73, 0x22, 0x9c, 0x3c,
  0xb3, 0x6f, 0x8c, 0x7a, 0xfb, 0x29, 0x7b, 0xdc, 0x49, 0xd3, 0x10, 0xc0,
  0x99, 0x99, 0xd2, 0xdc, 0x94, 0x6f, 0xc0, 0xb2, 0x79, 0x38, 0xc6, 0xad,
  0x67, 0xb0, 0xe3, 0xe9, 0x20, 0xd9, 0x89, 0x6c, 0x20, 0x4d, 0xe4, 0x25,
  0x92, 0xe3, 0x2b, 0xf6, 0x46, 0xd2, 0x5d, 0x50, 0x30, 0x1d, 0xfb, 0x51,
  0xe3, 0xb5, 0x95, 0xb2, 0x3d, 0x27, 0xa9, 0xbf, 0x44, 0x6f, 0x67, 0x05,
  0x87, 0x89, 0xfe, 0xb2, 0xfb, 0x0a, 0xe9, 0x89, 0xd2, 0xe4, 0xa8, 0x6f,
  0x9a, 0x85, 0x39, 0xc3, 0x18, 0xa3, 0xd6, 0xf9, 0x46, 0x00, 0x48, 0x80,
  0xd6, 0x76, 0x29, 0x05, 0x73, 0xfa, 0x3c, 0xf7, 0x77, 0x89, 0xb2, 0x71,
  0x1e, 0xd6, 0xc2, 0xda, 0x8d, 0x62, 0x65, 0x03, 0x60, 0xff, 0xc8, 0xfa,
  0xdd, 0xfd, 0xc7, 0x3a, 0x91, 0x03, 0xe2, 0x48, 0xca, 0xa0, 0x12, 0xa6,
  0xc7, 0xdd, 0xfb, 0x86, 0xd0, 0x9f, 0x14, 0x04, 0x6d, 0x44, 0x57, 0x29,
  0xee, 0x2c, 0xd1, 0xc0, 0x25, 0x9e, 0xba, 0xaa, 0x5f, 0x0a, 0xc6, 0x01,
  0x74, 0x2e, 0x04, 0x10, 0x6e, 0xd3, 0x28, 0x6b, 0x1b, 0x4c, 0x51, 0xea,
  0x13, 0xfb, 0xfd, 0x76, 0xf1, 0x06, 0xe3, 0xef, 0x98, 0x41, 0x12, 0x5b,
  0x05, 0x4a, 0x80, 0x50, 0x83, 0x69, 0x48, 0xb1, 0x55, 0x41, 0xe8, 0xec,
  0x36, 0xb5, 0xa3, 0xc6, 0x15, 0x11, 0x47, 0x2e, 0x76, 0xbd, 0x75, 0x97,
  0x24, 0x1e, 0x20, 0x34, 0x06, 0x56, 0x89, 0x57, 0x3a, 0x4d, 0x09, 0x5d,
  0x72, 0xb9, 0xc6, 0xff, 0xb4, 0x6d, 0x62, 0x48, 0x63, 0xc7, 0xd0, 0xa0,
  0x55, 0x59, 0xaa, 0xd4, 0x04, 0xaf, 0x29, 0xf2, 0x06, 0x7a, 0x08, 0xa9,
  0x01, 0x7d, 0xf0, 0x4e, 0x53, 0x74, 0xd5, 0xf3, 0x1f, 0x9a, 0xf3, 0x5f,
  0xe1, 0xd1, 0x55, 0x6a, 0xe3, 0x94, 0xdc, 0xd4, 0x0b, 0x9f, 0xc7, 0x63,
  0xac, 0xef, 0x2b, 0x8b, 0x82, 0x9a, 0x13, 0x96, 0x55, 0x7b, 0xb7, 0x7f,
  0xcc, 0x13, 0xcb, 0xc3, 0xb7, 0x9d, 0x47, 0xe1, 0xd5, 0x1f, 0x90, 0x1a,
  0xcf, 0x8b, 0x26, 0x64, 0x8d, 0x97, 0x86, 0x8b, 0x4a, 0x80, 0xb2, 0x76,
  0xd3, 0x09, 0x6e, 0x0b, 0x8c, 0x5f, 0x95, 0xb2, 0x04, 0xc4, 0xbe, 0x86,
  0x2e, 0xc7, 0x2e, 0x02, 0x21, 0xc2, 0x84, 0xc1, 0x8e, 0xd7, 0x16, 0x1b,
  0xc3, 0x51, 0x2b, 0xcd, 0x49, 0x1e, 0x54, 0x7d, 0x17, 0x40, 0xa1, 0x4c,
  0x93, 0x36, 0x0a, 0xdc, 0xd4, 0x89, 0x5f, 0xb1, 0xad, 0xe2, 0x21, 0x0f,
  0x9d, 0x04, 0xfa, 0x46, 0xc9, 0xf3, 0xe0, 0xbb, 0xed, 0x0e, 0x32, 0xc9,
  0x74, 0x31, 0x5b, 0xbb, 0x81, 0xad, 0x6d, 0x33, 0xa1, 0x78, 0x8e, 0xe0,
  0x24, 0x3d, 0x52, 0x83, 0x6d, 0x79, 0xbe, 0xd2, 0x48, 0xc4, 0x5a, 0x02,
  0xf1, 0xb0, 0xb3, 0x25, 0xcf, 0xae, 0xe9, 0x11, 0xe8, 0x1f, 0x52, 0x9e,
  0x14, 0x1c, 0x90, 0x1c, 0x19, 0x80, 0x57, 0x6a, 0xc7, 0xd0, 0x5b, 0xd0,
  0x7c, 0x78, 0x1f, 0xe5, 0xe0, 0xb8, 0xf2, 0x58, 0xbe, 0x49, 0xde, 0x3c,
  0xfa, 0xb8, 0xc0, 0x78, 0xd0, 0xc6, 0xcc, 0xdf, 0x00, 0x7d, 0xce, 0xb4,
  0x6f, 0xce, 0xe6, 0x5c, 0xca, 0xf1, 0x2f, 0xf4, 0x27, 0xaa, 0x14, 0x89,
  0x02, 0x40, 0x74, 0x10, 0xc8, 0xc1, 0xf9, 0xc4, 0x9d, 0xc2, 0xb1, 0x1c,
  0xfa, 0x12, 0x2f, 0x96, 0x5e, 0x21, 0xb0, 0x2c, 0x0e, 0xb2, 0x70, 0x42,
  0xaa, 0x00, 0x07, 0x8e, 0x3e, 0x02, 0xdf, 0x7e, 0xab, 0x9a, 0x1b, 0x58,
  0x57, 0x4d, 0xb4, 0xf3, 0xd8, 0x6e, 0xdc, 0xbb, 0xd8, 0x56, 0xed, 0x5a,
  0x47, 0xab, 0x3d, 0xa3, 0x82, 0xfe, 0xae, 0x1b, 0x7f, 0xbf, 0x8c, 0x4b,
  0x56, 0x2b, 0xbb, 0xef, 0x98, 0x37, 0xeb, 0xaa, 0xec, 0xec, 0x10, 0x49,
  0xa9, 0xe8, 0xea, 0x35, 0x58, 0xac, 0xed, 0xfe, 0xef, 0x63, 0x41, 0x13,
  0xbf, 0x40, 0x01, 0xf1, 0x45, 0xf7, 0xf9, 0x87, 0xc4, 0x47, 0x7d, 0x8d,
  0xd2, 0xa9, 0x7b, 0xd7, 0x7e, 0x2d, 0xcb, 0xd5, 0x37, 0xa7, 0x3d, 0x86,
  0xac, 0x52, 0x66, 0x95, 0xe0, 0x1b, 0xd7, 0xe2, 0xc8, 0xc7, 0x4f, 0xe8,
  0xf3, 0xdf, 0x22, 0x17, 0xb8, 0x9d, 0x87, 0x21, 0xe1, 0x18, 0xdf, 0x58,
  0xbb, 0xac, 0x4f, 0x63, 0xd7, 0x7a, 0x5b, 0xbf, 0x61, 0xde, 0xbc, 0x85,
  0xc0, 0x24, 0x22, 0x61, 0x62, 0xe8, 0xce, 0x5a, 0x2f, 0xeb, 0xc0, 0xd1,
  0x37, 0x16, 0xf5, 0x4d, 0xe1, 0x7b, 0xf9, 0xf6, 0x84, 0x54, 0xff, 0xd7,
  0x31, 0x06, 0x32, 0x44, 0xe1, 0x8f, 0xd6, 0x84, 0x98, 0x4b, 0x96, 0x0a,
  0x74, 0x58, 0x39, 0xca, 0xa6, 0x4d, 0x77, 0xb9, 0x02, 0x13, 0xd5, 0xf1,
  0xe6, 0x7d, 0x6a, 0x70, 0xdd, 0x2f, 0xca, 0x60, 0x47, 0x90, 0x56, 0xdf,
  0xa2, 0x37, 0x70, 0x60, 0xf0, 0xb1, 0xee, 0xf5, 0xaa, 0x40, 0x8c, 0xb7,
  0xcf, 0xe8, 0xf1, 0x25, 0x39, 0x4e, 0xaa, 0xfa, 0x05, 0x06, 0x1e, 0x9c,
  0xb3, 0xa7, 0x92, 0x48, 0xac, 0x93, 0x01, 0x18, 0xab, 0xc5, 0x7d, 0x3c,
  0x2b, 0xbd, 0x88, 0xd6, 0x77, 0x5b, 0x77, 0xb8, 0xc3, 0xfb, 0x54, 0x57,
  0x69, 0x63, 0xbc, 0x69, 0x70, 0xf8, 0x43, 0xba, 0xad, 0xa7, 0xc8, 0x40,
  0x99, 0xcd, 0x7b, 0x94, 0x5b, 0x67, 0xd7, 0xb1, 0x70, 0xd6, 0x18, 0x90,
  0x8b, 0x09, 0x93, 0x18, 0xcc, 0xd6, 0x3f, 0xc6, 0xab, 0x10, 0xe6, 0xe5,
  0x80, 0x18, 0x66, 0xbe, 0xad, 0x7d, 0x99, 0xf5, 0x21, 0x6f, 0x2c, 0xd5,
  0x90, 0x33, 0xad, 0x74, 0x45, 0xe1, 0xee, 0x89, 0x6c, 0xe2, 0x4c, 0x04,
  0x37, 0x1a, 0xa8, 0xf9, 0x54, 0x0c, 0x07, 0x52, 0x41, 0xe9, 0xf6, 0xec,
  0x17, 0x31, 0x46, 0xe3, 0x5b, 0x28, 0xf8, 0xe6, 0xa1, 0x44, 0x56, 0x41,
  0x80, 0xe0, 0x29, 0x1c, 0xd6, 0x2a, 0xb9, 0xa4, 0xd4, 0x81, 0x50, 0xbf,
  0xd5, 0x4c, 0xbd, 0x9c, 0xc0, 0xb1, 0xb2, 0xa8, 0x41, 0xc0, 0x98, 0x2a,
  0xde, 0xa0, 0xd5, 0x4b, 0x01, 0x1b, 0xa8, 0xbb, 0x87, 0x14, 0xbd, 0x20,
  0x27, 0x79, 0xe1, 0x06, 0x1b, 0x66, 0xef, 0x35, 0xf7, 0x28, 0xce, 0xed,
  0x44, 0xbd, 0xb2, 0x9e, 0x29, 0x13, 0xb2, 0xb0, 0xa2, 0xb7, 0x46, 0x01,
  0x6d, 0x48, 0x23, 0x67, 0x77, 0x94, 0x3a, 0xcc, 0x9c, 0xa3, 0xae, 0x2f,
  0x7c, 0xdb, 0x5e, 0xa6, 0x89, 0xc7, 0xe8, 0xc6, 0xb8, 0xe8, 0x25, 0xaf,
  0x78, 0xe6, 0x84, 0xfa, 0xac, 0xc4, 0x0a, 0xc7, 0xc1, 0x80, 0xc4, 0x2d,
  0x40, 0x19, 0x6c, 0xed, 0xb0, 0xf0, 0x02, 0x47, 0x97, 0xbb, 0xa9, 0x86,
  0xd3, 0x37, 0x72, 0xc9, 0xff, 0x1b, 0xf6, 0x69, 0x7c, 0xd5, 0x44, 0x64,
  0xa3, 0x6e, 0x26, 0xa2, 0x06, 0xb6, 0xad, 0xe9, 0x31, 0x22, 0xf8, 0x97,
  0x3d, 0xd4, 0x29, 0xd7, 0x70, 0x7f, 0xc5, 0xb9, 0xb5, 0xe6, 0x43, 0xba,
  0x63, 0xfc, 0xfc, 0xcf, 0xce, 0x2d, 0x51, 0x67, 0x2d, 0xe8, 0x68, 0x27,
  0xf6, 0x80, 0x96, 0xba, 0xb5, 0x37, 0x8f, 0xd1, 0xc1, 0x73, 0x4a, 0x45,
  0xcd, 0x63, 0xf4, 0x11, 0xbb, 0x3f, 0x0f, 0xaf, 0xee, 0xeb, 0x1a, 0x47,
  0x7c, 0x24, 0x09, 0xaf, 0xce, 0x33, 0x76, 0xde, 0xa6, 0x2b, 0x1e, 0xfa,
  0x83, 0x05, 0x6e, 0x9d, 0x9e, 0xfb, 0x6c, 0xa5, 0xdd, 0x13, 0xf0, 0xad,
  0x73, 0xd2, 0x6f, 0x36, 0x8d, 0xbe, 0x6b, 0xeb, 0xd2, 0xe2, 0x33, 0x0c,
  0x0f, 0x48, 0x8a, 0x98, 0x8b, 0x0b, 0x0b, 0x0f, 0xb8, 0x0b, 0x4b, 0x7f,
  0xbe, 0x3a, 0x20, 0x10, 0x84, 0xf3, 0x62, 0x88, 0x06, 0xd0, 0x24, 0xdb,
  0x9f, 0xe1, 0x65, 0x8d, 0x26, 0xda, 0xe2, 0xea, 0x44, 0xaa, 0x91, 0x1f,
  0x16, 0x3f, 0x37, 0x16, 0x1d, 0x6e, 0xf7, 0x1d, 0x8b, 0x37, 0x62, 0x30,
  0xd0, 0xe0, 0x1f, 0x1c, 0x64, 0x96, 0x5f, 0xcc, 0x22, 0x20, 0xc0, 0x22,
  0x1e, 0x1d, 0xda, 0x15, 0xf5, 0xfb, 0xc0, 0x49, 0x0b, 0x8f, 0x97, 0xb7,
  0x52, 0x5f, 0xba, 0xcc, 0x85, 0xfa, 0xb4, 0xc5, 0x65, 0xf2, 0x99, 0x09,
  0x6c, 0x37, 0x75, 0x74, 0x59, 0xc7, 0x4f, 0x4b, 0x72, 0xad, 0x9a, 0x68,
  0x65, 0x48, 0xfc, 0x22, 0x92, 0x9b, 0xac, 0x24, 0x90, 0x8f, 0x12, 0x83,
  0x06, 0x97, 0xfd, 0x84, 0x34, 0x59, 0x9a, 0x7c, 0x34, 0x38, 0x20, 0xca,
  0xe7, 0x76, 0x81, 0xde, 0xdc, 0xeb, 0x9f, 0x00, 0x9b, 0x2f, 0x1e, 0x12,
  0xfb, 0x41, 0x62, 0xcc, 0x1b, 0x72, 0xcf, 0x1b, 0xbb, 0x48, 0x21, 0xe8,
  0x87, 0xa7, 0x44, 0x06, 0x60, 0xd1, 0x59, 0xb8, 0xa3, 0x39, 0x1a, 0xa3,
  0xb9, 0x28, 0xa5, 0x69, 0x6c, 0xcf, 0x76, 0x9e, 0x52, 0x23, 0xda, 0x2f,
  0x11, 0x34, 0x6c, 0x63, 0x92, 0x09, 0x00, 0xe4, 0x65, 0x53, 0x33, 0xb1,
  0x13, 0x34, 0x38, 0x1a, 0x18, 0x87, 0x56, 0xda, 0x14, 0xea, 0x3a, 0xe3,
  0x13, 0x80, 0xca, 0x97, 0x2d, 0xe8, 0x18, 0x4d, 0xc4, 0x3d, 0xeb, 0x12,
  0xac, 0xfe, 0xf1, 0xc6, 0x7e, 0x4d, 0x60, 0xa9, 0x32, 0x8d, 0xc7, 0x6d,
  0xed, 0x08, 0x20, 0x3a, 0xab, 0x78, 0xbb, 0x73, 0x10, 0x26, 0x74, 0xc1,
  0x49, 0x90, 0xe0, 0x7e, 0xde, 0x26, 0x11, 0x82, 0xb1, 0xb1, 0xd0, 0xe6,
  0x9e, 0x80, 0x9a, 0x02, 0xce, 0x99, 0x80, 0x13, 0x23, 0x01, 0x87, 0x4e,
  0x94, 0xe9, 0x17, 0xf1, 0xa9, 0xc4, 0xa1, 0x90, 0xa0, 0xa3, 0x8f, 0xe2,
  0x73, 0x23, 0x18, 0x90, 0xc2, 0x2c, 0x38, 0xf5, 0x9c, 0xf5, 0x41, 0xa4,
  0x55, 0xf2, 0x65, 0xc6, 0xf0, 0xea, 0x3d, 0xbd, 0xbd, 0xf4, 0x3a, 0xfd,
  0xba, 0x6a, 0x2f, 0x01, 0x81, 0x17, 0xe3, 0x92, 0xda, 0xfe, 0xf5, 0x75,
  0xfb, 0x41, 0x20, 0x17, 0xad, 0x9d, 0x07, 0xea, 0xbd, 0xdb, 0xcb, 0xb4,
  0x27, 0x88, 0x87, 0xd6, 0x67, 0x02, 0xff, 0x5b, 0x10, 0x25, 0xa1, 0x28,
  0x50, 0xef, 0x49, 0x7e, 0xd3, 0x02, 0x66, 0x17, 0x54, 0xd5, 0xb7, 0x58,
  0x13, 0x08, 0x7e, 0x4b, 0xac, 0x9c, 0x17, 0x8c, 0x9f, 0x0d, 0xeb, 0x37,
  0x17, 0x91, 0x06, 0x63, 0x11, 0xd0, 0x8c, 0x13, 0x8b, 0x87, 0x25, 0xc6,
  0xc1, 0x67, 0xe9, 0x10, 0x70, 0xbb, 0xc1, 0x1a, 0x4c, 0xef, 0xa2, 0xbf,
  0x3d, 0x2c, 0x51, 0x13, 0xaf, 0x9c, 0x9a, 0xfe, 0x56, 0xeb, 0x0a, 0x9d,
  0x21, 0xdc, 0xfc, 0x4a, 0x2c, 0xd6, 0x29, 0x82, 0x40, 0x7a, 0xb2, 0xa8,
  0x47, 0x3a, 0x28, 0x53, 0xbb, 0x2c, 0x29, 0x63, 0x17, 0xd9, 0xc5, 0x90,
  0x0e, 0xcd, 0x4d, 0x23, 0xae, 0x30, 0x38, 0x12, 0x66, 0xab, 0xab, 0xe4,
  0xd0, 0x90, 0x2a, 0x05, 0xea, 0xae, 0x87, 0x6a, 0xc3, 0x6b, 0x19, 0x54,
  0x64, 0x0d, 0xcf, 0x30, 0xa8, 0x93, 0xa9, 0x3d, 0x92, 0x63, 0x9b, 0x12,
  0xba, 0x4c, 0xa5, 0xfb, 0x83, 0x32, 0xa1, 0x1d, 0xc2, 0x5c, 0x07, 0x3a,
  0x68, 0x94, 0x7d, 0x0a, 0x22, 0x06, 0x54, 0xb9, 0x06, 0x95, 0xbe, 0x22,
  0x4f, 0x14, 0xc4, 0x6e, 0x32, 0x57, 0x3d, 0x88, 0xea, 0x31, 0x53, 0x50,
  0xee, 0xc0, 0x12, 0x36, 0xfe, 0x38, 0xe4, 0x1a, 0x64, 0x66, 0x4f, 0xef,
  0x2f, 0xab, 0x95, 0x5a, 0x02, 0x9e, 0xe2, 0xbb, 0x48, 0x3f, 0x09, 0x59,
  0xbc, 0xc5, 0x61, 0x06, 0x72, 0xd8, 0xe1, 0x93, 0x9b, 0xaa, 0x25, 0x11,
  0x1a, 0xad, 0x4f, 0x53, 0x85, 0x24, 0xc1, 0xcb, 0x4c, 0xca, 0xd9, 0xe4,
  0x69, 0x32, 0xff, 0x96, 0xeb, 0x92, 0x39, 0x16, 0xc9, 0x47, 0x31, 0x64,
  0xae, 0xdd, 0x50, 0x77, 0x2f, 0x64, 0xae, 0xa6, 0x4a, 0x42, 0xe0, 0x15,
  0xcf, 0xaf, 0x29, 0xb4, 0xe0, 0xd0, 0xe2, 0x79, 0x84, 0xf0, 0x91, 0xb3,
  0x80, 0xa7, 0x3a, 0xf5, 0x8a, 0x72, 0xab, 0x63, 0xc3, 0x36, 0x8b, 0xc4,
  0x3b, 0xe8, 0xc7, 0x50, 0x82, 0xbd, 0x33, 0x84, 0x62, 0x79, 0xa9, 0xb1,
  0x52, 0x0b, 0xa0, 0x32, 0x07, 0x48, 0xd0, 0x67, 0xe0, 0x53, 0x66, 0x8f,
  0xd6, 0x4e, 0x38, 0xc9, 0x54, 0x27, 0x96, 0x48, 0xf6, 0x90, 0x84, 0x2f,
  0x22, 0x57, 0x8e, 0x49, 0xc5, 0x56, 0x29, 0x8f, 0x63, 0xe6, 0x6d, 0x31,
  0x10, 0xcc, 0xfb, 0xcc, 0xd7, 0xd9, 0x13, 0xf6, 0x68, 0x31, 0x65, 0xf4,
  0xc0, 0x2e, 0x75, 0x1e, 0x16, 0xba, 0x62, 0x38, 0xa9, 0xe4, 0x49, 0x80,
  0xa7, 0xbe, 0x89, 0xd4, 0xcf, 0x72, 0x10, 0x65, 0x2e, 0x77, 0x94, 0xb8,
  0x9f, 0x8b, 0x94, 0xce, 0x7a, 0x5c, 0xf6, 0xcc, 0x7b, 0x7b, 0x24, 0x27,
  0x98, 0xca, 0x13, 0x49, 0xf6, 0x78, 0xed, 0xa6, 0x08, 0x05, 0xeb, 0xb7,
  0x8b, 0xcf, 0xb1, 0xe7, 0x8f, 0xe0, 0x6c, 0x01, 0xdc, 0x70, 0xd3, 0xa6,
  0x8f, 0xdf, 0x6d, 0x52, 0xfa, 0x93, 0x87, 0xb4, 0x04, 0xa0, 0x6c, 0xcd,
  0x94, 0x27, 0x75, 0x86, 0xd7, 0xb7, 0xbf, 0x19, 0x97, 0x1d, 0x4b, 0xca,
  0x0f, 0xb4, 0x04, 0xf6, 0x78, 0xda, 0x29, 0xb7, 0xc1, 0xbf, 0x47, 0xe7,
  0x2b, 0xbf, 0x2e, 0xdb, 0x8d, 0x95, 0x4a, 0x70, 0x7c, 0x3b, 0x28, 0x78,
  0x00, 0x94, 0x29, 0x76, 0x09, 0x94, 0x57, 0x82, 0x06, 0x75, 0x6c, 0xd3,
  0xa3, 0x9c, 0x1e, 0x44, 0x07, 0x80, 0x42, 0xa6, 0x2e, 0xf3, 0x07, 0x2f,
  0x6c, 0x0f, 0xcd, 0xcc, 0x38, 0xa7, 0x7b, 0xd7, 0x1f, 0x4f, 0x1c, 0xfa,
  0x95, 0x68, 0xa7, 0xf2, 0x10, 0x53, 0x26, 0x6f, 0x6c, 0x15, 0x25, 0xc9,
  0xeb, 0x1f, 0x86, 0xf0, 0x51, 0x6f, 0x9e, 0xd3, 0x3d, 0xb1, 0xea, 0x60,
  0x7f, 0xa9, 0xca, 0x73, 0x4d, 0x57, 0xc7, 0x2d, 0x02, 0x42, 0x6c, 0xd8,
  0xb3, 0x62, 0x36, 0x65, 0xcb, 0x6b, 0x46, 0x4c, 0x5c, 0x1a, 0xb1, 0xbb,
  0x6e, 0xb3, 0xc6, 0x93, 0x5a, 0x7e, 0xac, 0x47, 0x3c, 0x5c, 0xaa, 0xdd,
  0x5f, 0xd9, 0x4b, 0x6f, 0xda, 0xbc, 0xf8, 0xad, 0x01, 0x15, 0x50, 0x73,
  0x65, 0x3c, 0x48, 0x1f, 0x5b, 0xaf, 0x1f, 0xa9, 0xdc, 0x50, 0x30, 0x2f,
  0x64, 0x08, 0xd4, 0x43, 0x41, 0xe8, 0xee, 0xe9, 0x18, 0xb8, 0x0b, 0x42,
  0x05, 0xe9, 0xa8, 0xca, 0x37, 0xef, 0x4e, 0x82, 0x44, 0x6b, 0x44, 0x51,
  0x8d, 0xea, 0x87, 0x30, 0x28
};
const unsigned int CONST_KEY_LEN = 1949;  // liczba pierwsza



XSolCrypt::XSolCrypt()
{	
	for(int i=0;i<DEF_KEY_LEN;i++)		
		KEY_DEFAULT+=DEF_KEY[i];		// ladujemy defaultkey do stringa, zeby juz nie przerabiac tego kodu
}

void XSolCrypt::AddKey(const std::string& k)
{
	bool exist = false;
	for(int i = 0; i < KEYS.size(); i++)
	{
		if(KEYS[i] == k)
		{
			exist = true;
			break;	
		}
	}

	if(!exist)	
		KEYS.push_back(k);
}

void XSolCrypt::ClearKeys()
{
	KEYS.clear();
}

std::string XSolCrypt::GetLastKey()
{
	if(KEYS.size() > 0)
		return KEYS[KEYS.size() - 1];
		
	return KEY_DEFAULT;	
}

std::string XSolCrypt::GetKey(int i)
{
	if(i <= 0 || i > KEYS.size())
		return KEY_DEFAULT;
		
	return KEYS[i - 1];
}

std::string XSolCrypt::Encode(const std::string& f)
{
		//jesli plik jest juz zaszyfrowany, to nie szyfrujemy go ponownie
	if(f.substr(0, 11) == "XCRYPT 1.00")
		return f;
	
		//obliczamy crc
	crc32o crc32;
	crc32.put((unsigned char*)f.c_str(), f.size());
	unsigned int crc = crc32.getcrc();
	
		//szyfrujemy plik
	std::string key = GetLastKey();
		
	int keyi = ((crc>>16) & 0xff00) | (crc & 0xff);
	while(keyi>=key.size()) keyi>>=1;
	
	int keyi2 = ((crc>>24) & 0xff00) | ((crc>>8) & 0xff);
	while(keyi2>=CONST_KEY_LEN) keyi2>>=1;
	
	std::string nf = "XCRYPT 1.00"; //naglowek [12 bajtow]
	
		//crc [4 bajty]
	nf += (crc >> 24) & 0xff;
	nf += (crc >> 16) & 0xff;	
	nf += (crc >> 8) & 0xff;
	nf += crc & 0xff;
	
		//szyfrujemy dane
	unsigned int tmp;
			
	for(int i = 0; i < f.size(); i++)
	{	
		nf += (f[i] ^ key[keyi] ^ CONST_KEY[keyi2]);

		keyi++;		
		if(keyi >= key.size())
			keyi = 0;	

		keyi2++;		
		if(keyi2 >= CONST_KEY_LEN)
			keyi2 = 0;	
	}
	
	return nf;
}

std::string XSolCrypt::Decode(const std::string& f)
{
	if(f.size() < 15)
		return f;
	
		//sprawdzmay naglowek [12 bajtow]
	if(f.substr(0, 11) != "XCRYPT 1.00")
		return f;
	
		//pobieramy crc [4 bajty]	
	unsigned int crc = 0;
	crc += (unsigned int)((f[11] & 0xff) << 24);
	crc += (unsigned int)((f[12] & 0xff) << 16);
	crc += (unsigned int)((f[13] & 0xff) << 8);
	crc += (unsigned int)(f[14] & 0xff);

		//odszyfrowujemy plik
	int ki = KEYS.size();	
	std::string key = "";
	
	std::string nf = "";	
	
	do
	{
		key = GetKey(ki);
				
		int keyi = ((crc>>16) & 0xff00) | (crc & 0xff);
		while(keyi>=key.size()) keyi>>=1;
				
		int keyi2 = ((crc>>24) & 0xff00) | ((crc>>8) & 0xff);
		while(keyi2 >= CONST_KEY_LEN) keyi2>>=1;

		nf = "";
		
		unsigned int tmp;
		for(int i = 15; i < f.size(); i++)
		{
			nf += (f[i] ^ key[keyi] ^ CONST_KEY[keyi2]);
			
			keyi++;
			if(keyi >= key.size())
				keyi = 0;
			
			keyi2++;		
			if(keyi2 >= CONST_KEY_LEN)
				keyi2 = 0;
		}
		
			//sprawdzamy crc
		crc32o crc32;
		crc32.put((unsigned char*)nf.c_str(), nf.size());
		if(crc32.getcrc() == crc)
			return nf;
		else
			ki--;
	}
	while(ki >= 0);
	
	return f;
}

